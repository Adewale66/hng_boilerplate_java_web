version: "3"

services:
  postgresdb:
    image: postgres
    container_name: postgresdb
    restart: unless-stopped
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=thepassword
      - POSTGRES_DB=admindb
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgresdatax:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672" # Management UI
      - "5672:5672"   # AMQP port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net
    restart: unless-stopped


  backend:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_CONFIG_LOCATION=/app/config/application.properties
    volumes:
      - ./src/main/resources/application.properties:/app/config/application.properties
    networks:
      - backend-net
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresdb:
        condition: service_healthy
    restart: unless-stopped

networks:
  backend-net:
    driver: bridge

volumes:
    postgresdatax: